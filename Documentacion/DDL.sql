-- CREACIÓN DE LA BASE DE DATOS
CREATE DATABASE MECTRONICS;
GO

USE MECTRONICS;
GO

-- TABLA DE ESTUDIANTES
CREATE TABLE ESTUDIANTES (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    NOMBRE NVARCHAR(100) NOT NULL,
    APELLIDO NVARCHAR(100) NOT NULL,
    CORREO_ELECTRONICO NVARCHAR(150) UNIQUE NOT NULL,
    CONTRASENA NVARCHAR(255) NOT NULL,
    FECHA_REGISTRO DATETIME DEFAULT GETDATE()
);
GO

-- TABLA DE MATERIAS
CREATE TABLE MATERIAS (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    NOMBRE NVARCHAR(100) NOT NULL,
    CREDITOS INT NOT NULL CHECK (CREDITOS = 3) -- TODAS LAS MATERIAS TIENEN 3 CRÉDITOS
);
GO

-- TABLA DE PROFESORES
CREATE TABLE PROFESORES (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    NOMBRE NVARCHAR(100) NOT NULL,
    APELLIDO NVARCHAR(100) NOT NULL
);
GO

-- TABLA INTERMEDIA DE MATERIAS Y PROFESORES (CADA PROFESOR IMPARTE 2 MATERIAS)
CREATE TABLE MATERIAS_PROFESORES (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    PROFESOR_ID INT NOT NULL,
    MATERIA_ID INT NOT NULL,
    FOREIGN KEY (PROFESOR_ID) REFERENCES PROFESORES(ID),
    FOREIGN KEY (MATERIA_ID) REFERENCES MATERIAS(ID),
    UNIQUE (PROFESOR_ID, MATERIA_ID) -- UN PROFESOR NO PUEDE IMPARTIR LA MISMA MATERIA DOS VECES
);
GO

-- TABLA INTERMEDIA DE MATERIAS Y ESTUDIANTES
CREATE TABLE MATERIAS_ESTUDIANTES (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    ESTUDIANTE_ID INT NOT NULL,
    MATERIA_ID INT NOT NULL,
    FOREIGN KEY (ESTUDIANTE_ID) REFERENCES ESTUDIANTES(ID),
    FOREIGN KEY (MATERIA_ID) REFERENCES MATERIAS(ID),
    UNIQUE (ESTUDIANTE_ID, MATERIA_ID) -- UN ESTUDIANTE NO PUEDE VER LA MISMA MATERIA DOS VECES
);
GO


CREATE VIEW VMATERIAS AS
SELECT
    m.ID AS MATERIA_ID,
    m.NOMBRE AS MATERIA_NOMBRE,
    m.CREDITOS AS CREDITOS,
    p.ID AS PROFESOR_ID,
    p.NOMBRE AS PROFESOR_NOMBRE,
    p.APELLIDO AS PROFESOR_APELLIDO
FROM MATERIAS m
LEFT JOIN MATERIAS_PROFESORES mp ON m.ID = mp.MATERIA_ID
LEFT JOIN PROFESORES p ON mp.PROFESOR_ID = p.ID;
GO


CREATE VIEW VMATERIAS_ESTUDIANTES AS
SELECT
    me.ESTUDIANTE_ID,
    e.NOMBRE AS ESTUDIANTE_NOMBRE,
    e.APELLIDO AS ESTUDIANTE_APELLIDO,
    m.ID AS MATERIA_ID,
    m.NOMBRE AS MATERIA_NOMBRE,
    p.ID AS PROFESOR_ID,
    p.NOMBRE AS PROFESOR_NOMBRE,
    p.APELLIDO AS PROFESOR_APELLIDO
FROM MATERIAS_ESTUDIANTES me
INNER JOIN MATERIAS m ON me.MATERIA_ID = m.ID
INNER JOIN ESTUDIANTES e ON me.ESTUDIANTE_ID = e.ID
LEFT JOIN MATERIAS_PROFESORES mp ON m.ID = mp.MATERIA_ID
LEFT JOIN PROFESORES p ON mp.PROFESOR_ID = p.ID;
GO
